#include <stdio.h>
#include <stdlib.h>



void DecimalNumberToBinary(int decimal_number){
	if(decimal_number < 2){
		printf("%d" , decimal_number);
	}
	else{
		DecimalNumberToBinary(decimal_number / 2);
		printf("%d", decimal_number % 2);
	}
}

//Recursive pow functions: first - simple way (without optimization); second - with optimization
// Simple way (without optimization
int Recursive_simple_way(int base, int degree){
	if(degree == 1){
		return base;
	}
	else if(degree == 0){
		return 1;
	}
	else{
		return base * Recursive_simple_way(base, degree - 1);
	}
}

// Way with optimization
int Recursive_optimization(int base, int degree){
	if(degree == 1){
		return base;
	}
	else if(degree == 0){
		return 1;
	}
	else if(degree % 2 == 0){
		return Recursive_optimization(base, degree / 2) *
				Recursive_optimization(base, degree / 2);
	}
	else{
		return base * Recursive_optimization(base, degree - 1);
	}
}

int main(void) {
	DecimalNumberToBinary(126);
	printf("\n%d", Recursive_simple_way(2, 0));
	printf("\n%d", Recursive_optimization(2, 0));
	return 0;
}
